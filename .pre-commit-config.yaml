# This repository contains three projects in three languages!
#
# - the main `pls` codebase (Rust) in the root
# - the example generation codebase (Python) in `examples/`
# - the documentation (JavaScript) in `docs/`

default_install_hook_types:
  - pre-commit
  - pre-push

repos:
  # Generic
  # =======

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: fix-encoding-pragma
        args:
          - --remove
      - id: forbid-submodules
      - id: mixed-line-ending
        args:
          - --fix=auto
      - id: trailing-whitespace
        args:
          - --markdown-linebreak-ext=md

  # Rust
  # ====

  - repo: local
    hooks:
      - id: fmt
        name: fmt
        language: system
        types:
          - file
          - rust
        entry: cargo fmt
        pass_filenames: false

      - id: clippy
        name: clippy
        language: system
        types:
          - file
          - rust
        # `-D warnings` ensures that the job fails when encountering warnings.
        entry: cargo clippy --all-targets --all-features -- -D warnings
        pass_filenames: false

  - repo: local
    hooks:
      - id: unit
        name: unit
        language: system
        types:
          - file
          - rust
        entry: cargo test
        pass_filenames: false
        stages:
          - pre-push

  # Python
  # ======

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.1
    hooks:
      - id: ruff # replaces Flake8, isort, pydocstyle, pyupgrade
        args:
          - --fix
          - --exit-non-zero-on-fix
      - id: ruff-format # replaces Black

  # JavaScript
  # ==========

  - repo: local
    hooks:
      - id: prettier
        name: prettier
        "types": [text]
        language: system
        pass_filenames: true
        # Set log-level to error to prevent prettier printing every single file it checks
        # when running pre-commit with --all-files
        entry: pnpm exec prettier --write --ignore-unknown --log-level error

      - id: eslint
        name: eslint
        files: (frontend|automations|packages/js).*?\.(js|ts|mjs|vue|json5?)$
        "types": [file] # ESLint only accepts [javascript] by default.
        language: system
        pass_filenames: false
        entry: pnpm exec eslint --max-warnings=0 --no-warn-ignored --fix
