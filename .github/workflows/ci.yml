name: CI + CD

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Run lint
        run: cargo clippy --all-targets --all-features

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  unit:
    name: Run unit test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run unit test
        run: cargo test

  build:
    name: Build release
    needs:
      - lint
      - fmt
      - unit
    strategy:
      matrix:
        build:
          - linux
          - macos
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross

      - name: Build release
        run: cross build --verbose --release --target ${{ matrix.target }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: pls-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pls
